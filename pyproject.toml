[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "beeperpurge"
version = "v1.0.19"
description = "High-throughput parallel file system cleaner"
readme = "README.md"
requires-python = ">=3.9"
license = {text = "MIT"}
authors = [
    { name = "Alon Almog", email = "alon.almog@rivery.io" }
]
dependencies = []

[project.scripts]
beeperpurge = "beeperpurge.cleaner:main"

[tool.setuptools]
package-dir = {"" = "src"}
packages = ["beeperpurge"]

[tool.setuptools.dynamic]
version = {attr = "beeperpurge.__version__.__version__"}

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "pytest-cov",
    "pytest-mock",
    "ruff"
]

[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = "--cov --cov-report=term-missing"


[tool.coverage.run]
source = ["beeperpurge"]
relative_files = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
]

[tool.ruff]
# Set line length to 120
line-length = 120
# Exclude directories
exclude = [".venv", "venv", "build"]

[tool.ruff.lint]
# Select rules to enforce- autopep8 and flake8 equivalents only.
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F"   # pyflakes
]
# Ignore specific rules
ignore = [
    "D100",  # Missing docstring in public module
    "D104",  # Missing docstring in public package
    "D400",  # First line should end with a period
    "D401",  # First line should be in imperative mood
    "D200",  # One-line docstring should fit on one line with quotes
    "D205",  # 1 blank line required between summary line and description
    "D210",  # No whitespaces allowed surrounding docstring text
]